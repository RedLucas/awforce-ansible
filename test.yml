---
- hosts: role_webnode
  become: yes
  vars_files:
    - vars/main.yml

  pre_tasks:
    # - name: Add apt key for Debian
    #   apt_key: url=https://packages.sury.org/php/apt.gpg state=present

    # - name: Add repository for PHP
    #   apt_repository: repo='deb https://packages.sury.org/php/ {{ ansible_distribution_release }} main' update_cache=yes state=present
    - name: Ensure apt.conf exists
      file:
        path: /etc/apt/apt.conf
        state: touch
    - name: Don't install recommended packages
      lineinfile:
        dest: /etc/apt/apt.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
      with_items:
        - regexp: "^APT::Get::Install-Recommends.+$"
          line: "APT::Get::Install-Recommends \"false\";"
        - regexp: "^APT::Get::Install-Suggests.+$"
          line: "APT::Get::Install-Suggests \"false\";"

    # - name: Update all default packages
    #   apt: update_cache=yes upgrade=dist

    - include: tasks/aegir-user.yml

  roles:
    # - common
    # - geerlingguy.daemonize
    # - geerlingguy.git
    # - geerlingguy.postfix
    # - geerlingguy.nginx
    # - geerlingguy.nodejs
    - geerlingguy.php
    - geerlingguy.php-pecl
    - geerlingguy.php-mysql
    - geerlingguy.php-pecl
    - geerlingguy.php-memcached
    - geerlingguy.php-redis
    # - geerlingguy.composer
    # - geerlingguy.drush
    # - geerlingguy.drupal-console
    # - franklinkim.newrelic
    # - geerlingguy.security
    # - efs

  tasks:
    - name: Set php-cli version
      become: yes
      shell: update-alternatives --set php /usr/bin/php5.6
  #   - name: Configure php extension_dir
  #     lineinfile:
  #       dest: "{{ item[0] }}/php.ini"
  #       regexp: "{{ item[1].regexp }}"
  #       line: "{{ item[1].line }}"
  #       state: present
  #     with_nested:
  #       - "{{ php_conf_paths }}"
  #       - [ { regexp: "^extension_dir.?=.+$", line: "extension_dir = /usr/lib/php5/20131226" } ]
  #     when: php_use_managed_ini
  #     notify: restart webserver

# - name: install aegir
#   become: yes
#   hosts: 
#     - role_webnode
#   roles:
#     - aegir3-nginx
#     - aegir3-saas
