---
  - name: Figure out the hostmaster root
    shell: "drush @hostmaster status |grep 'Drupal root' |awk '{ print $NF }'"
    register: aegir_siteroot
    sudo: yes
    sudo_user: aegir
    changed_when: False

  - debug: msg={{ aegir_siteroot.stdoutÂ }}

  - name: Check if custom hostmaster modules are installed
    shell: "[ -d `{{ aegir_siteroot.stdout }}/sites/{{ hostmaster_fqdn }}/modules/hosting_services`]"
    failed_when: '"found" in aegir_custom_modules_exist.stderr'
    changed_when: False
    ignore_errors: True
    register: aegir_custom_modules_exist

  - name: Download the SaaS modules from drupal.org
    shell: drush dl -y {{ item }}
    args:
      chdir: '{{ aegir_siteroot.stdout }}/sites/{{ hostmaster_fqdn }}'
    with_items:
      - features
      - hosting_services
      - hosting_variables
      - hosting_saas
      - libraries
      - oauth
      - services
      - services_api_key_auth
    when: aegir_custom_modules_exist|failed
    sudo: yes
    sudo_user: aegir
    # TODO: merge hosting_saas_utils

  - name: Enable all modules
    shell: drush @hostmaster en -y {{ item }}
    with_items:
      - features
      - hosting_network
      - hosting_saas
      - hosting_services
      - hosting_variables
      - libraries
      - oauth
      - oauth_common
      - oauth_common_providerui
      - services
      - services_api_key_auth
    # awforce_ssl
    # hosting_variables
    when: aegir_custom_modules_exist|failed
    sudo: yes
    sudo_user: aegir
  # TODO: Add as dependencies to the main feature

  - name: Clear the drush cache
    shell: drush cc drush
    when: aegir_custom_modules_exist|failed
    sudo: yes
    sudo_user: aegir

  # This is not used here, it's used when we aggregate this info on the hub.
  - name: Get credentials for remote authentication
    script: ./generate_credentials.sh
    sudo: yes
    sudo_user: aegir
    changed_when: False
    register: "network_node_credentials"
